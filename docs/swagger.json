{
    "swagger": "2.0",
    "info": {
        "description": "Games Provider API is a 4G Solution. Responsible of managing information tags..",
        "title": "4g Tags API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Brian Campos Castro",
            "email": "brian.campos.castro@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3030",
    "basePath": "/api/v1",
    "paths": {
        "/health": {
            "get": {
                "description": "returns the time from DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "commons"
                ],
                "summary": "returns the time from DB",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API_KEY Header",
                        "name": "API_KEY",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "description": "Get all the tags by defining the fields",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Get all tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API_KEY Header",
                        "name": "API_KEY",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Event fields",
                        "name": "fields",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new tag item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Create a tag",
                "parameters": [
                    {
                        "description": "New tag",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validators.CreateBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "API_KEY Header",
                        "name": "API_KEY",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/tags/list": {
            "get": {
                "description": "Get all the tags by ids",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Get all tags by ids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API_KEY Header",
                        "name": "API_KEY",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags IDs",
                        "name": "tagIds",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/tags/{id}": {
            "get": {
                "description": "Get a tag by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Get a tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API_KEY Header",
                        "name": "API_KEY",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a tag item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Update a tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API_KEY Header",
                        "name": "API_KEY",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "tag Updated",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validators.UpdateBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "utils.ResponseData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "href": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "utils.ResponseMessage": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.ResponseData"
                    }
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.ResponseData"
                    }
                }
            }
        },
        "validators.CreateBody": {
            "type": "object",
            "properties": {
                "insUserId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "validators.UpdateBody": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "setUserId": {
                    "type": "integer"
                }
            }
        }
    }
}
